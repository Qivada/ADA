{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"metadata": {
		"type": "QuickStart",
		"itemDisplayName": "AzureDatabricks Template for VNet Injection with NAT Gateway",
		"description": "This template allows you to create a NAT gateway, network security group, a virtual network and an Azure Databricks workspace with the virtual network.",
		"summary": "Deploy a NAT Gateway, Network Security Group, a Virtual Network and an Azure Databricks Workspace with the Virtual Network."
	},
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"databricksNatGatewayName": {
			"defaultValue": "nat-PROJECT-dbw-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"metadata": {
				"description": "Name of the NAT gateway to be attached to the workspace subnets."
			}
		},
		"databricksNatGatewayPublicIpName": {
			"defaultValue": "pip-PROJECT-dbw-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"metadata": {
				"description": "Name of the NAT gateway public IP."
			}
		},
		"databricksNsgName": {
			"defaultValue": "nsg-PROJECT-dbw-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"metadata": {
				"description": "The name of the network security group to create."
			}
		},
		"databricksPricingTier": {
			"defaultValue": "premium",
			"allowedValues": [
				"trial",
				"standard",
				"premium"
			],
			"type": "string",
			"metadata": {
				"description": "The pricing tier of workspace."
			}
		},
		"databricksPrivateSubnetCidr": {
			"defaultValue": "10.1.1.0/24",
			"type": "string",
			"metadata": {
				"description": "Cidr range for the private subnet."
			}
		},
		"databricksPrivateSubnetName": {
			"defaultValue": "snet-PROJECT-dbw-private-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"metadata": {
				"description": "The name of the private subnet to create."
			}
		},
		"databricksPublicSubnetCidr": {
			"defaultValue": "10.1.0.0/24",
			"type": "string",
			"metadata": {
				"description": "Cidr range for the public subnet.."
			}
		},
		"databricksPublicSubnetName": {
			"defaultValue": "snet-PROJECT-dbw-public-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"metadata": {
				"description": "The name of the public subnet to create."
			}
		},
		"databricksVnetCidr": {
			"defaultValue": "10.1.0.0/21",
			"type": "string",
			"metadata": {
				"description": "Cidr range for the vnet."
			}
		},
		"databricksVnetName": {
			"defaultValue": "vnet-PROJECT-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"metadata": {
				"description": "The name of the virtual network to create."
			}
		},
		"databricksWorkspaceName": {
			"defaultValue": "dbw-PROJECT-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"metadata": {
				"description": "The name of the Azure Databricks workspace to create."
			}
		},
		"keyVaultName": {
			"defaultValue": "kv-PROJECT-ENVIRONMENT-REGION-INSTANCE",
			"type": "string",
			"minLength": 3,
			"maxLength": 24,
			"metadata": {
				"description": "The name of the Azure Key Vault to create."
			}
		}		
	},
	"variables": {
		"managedResourceGroupName": "[concat('databricks-rg-', parameters('databricksWorkspaceName'), '-', uniqueString(parameters('databricksWorkspaceName'), resourceGroup().id))]",
		"trimmedMRGName": "[substring(variables('managedResourceGroupName'), 0, min(length(variables('managedResourceGroupName')), 90))]",
		"managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('trimmedMRGName'))]",
		"databricksNsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('databricksNsgName'))]",
		"databricksVnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('databricksVnetName'))]"
	},
	"resources": [
		{
			"apiVersion": "2021-12-01",
			"type": "Microsoft.Network/networkSecurityGroups",
			"location": "[parameters('location')]",
			"name": "[parameters('databricksNsgName')]"
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2021-12-01",
			"name": "[parameters('databricksNatGatewayPublicIpName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"publicIPAddressVersion": "IPv4",
				"publicIPAllocationMethod": "Static",
				"idleTimeoutInMinutes": 4
			}
		},
		{
			"type": "Microsoft.Network/natGateways",
			"apiVersion": "2021-12-01",
			"name": "[parameters('databricksNatGatewayName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses', parameters('databricksNatGatewayPublicIpName'))]"
			],
			"properties": {
				"idleTimeoutInMinutes": 4,
				"publicIpAddresses": [
					{
						"id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('databricksNatGatewayPublicIpName'))]"
					}
				]
			}
		},
		{
			"apiVersion": "2021-12-01",
			"type": "Microsoft.Network/virtualNetworks",
			"location": "[parameters('location')]",
			"name": "[parameters('databricksVnetName')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/natGateways', parameters('databricksNatGatewayName'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('databricksNsgName'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[parameters('databricksVnetCidr')]"
					]
				},
				"subnets": [
					{
						"name": "[parameters('databricksPublicSubnetName')]",
						"properties": {
							"addressPrefix": "[parameters('databricksPublicSubnetCidr')]",
							"networkSecurityGroup": {
								"id": "[variables('databricksNsgId')]"
							},
							"natGateway": {
								"id": "[resourceId('Microsoft.Network/natGateways', parameters('databricksNatGatewayName'))]"
							},
							"delegations": [
								{
									"name": "databricks-del-public",
									"properties": {
										"serviceName": "Microsoft.Databricks/workspaces"
									}
								}
							]
						}
					},
					{
						"name": "[parameters('databricksPrivateSubnetName')]",
						"properties": {
							"addressPrefix": "[parameters('databricksPrivateSubnetCidr')]",
							"networkSecurityGroup": {
								"id": "[variables('databricksNsgId')]"
							},
							"natGateway": {
								"id": "[resourceId('Microsoft.Network/natGateways', parameters('databricksNatGatewayName'))]"
							},
							"delegations": [
								{
									"name": "databricks-del-private",
									"properties": {
										"serviceName": "Microsoft.Databricks/workspaces"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"apiVersion": "2023-02-01",
			"type": "Microsoft.Databricks/workspaces",
			"location": "[parameters('location')]",
			"name": "[parameters('databricksWorkspaceName')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('databricksNsgName'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/', parameters('databricksVnetName'))]"
			],
			"sku": {
				"name": "[parameters('databricksPricingTier')]"
			},
			"comments": "The managed resource group specified will be locked after deployment.",
			"properties": {
				"managedResourceGroupId": "[variables('managedResourceGroupId')]",
				"parameters": {
					"customVirtualNetworkId": {
						"value": "[variables('databricksVnetId')]"
					},
					"customdatabricksPublicSubnetName": {
						"value": "[parameters('databricksPublicSubnetName')]"
					},
					"customdatabricksPrivateSubnetName": {
						"value": "[parameters('databricksPrivateSubnetName')]"
					},
					"enableNoPublicIp": {
						"value": true
					}
				}
			}
		},
		{
			"type": "Microsoft.KeyVault/vaults",
			"apiVersion": "2021-11-01-preview",
			"name": "[parameters('keyVaultName')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses/', parameters('databricksNatGatewayPublicIpName'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/', parameters('databricksVnetName'))]"
			],
			"location": "[parameters('location')]",
			"properties": {
				"enabledForDeployment": false,
				"enabledForDiskEncryption": false,
				"enabledForTemplateDeployment": false,
				"enableSoftDelete": true,
				"softDeleteRetentionInDays": 90,				
				"enablePurgeProtection": true,
				"enableRbacAuthorization": true,
				"tenantId": "[subscription().tenantId]",
				"sku": {
					"family": "A",
					"name": "standard"
				},
				"networkAcls": {
					"bypass": "AzureServices",
					"defaultAction": "Deny",
					"ipRules": [
						{
							"value": "[reference(resourceId('Microsoft.Network/publicIPAddresses/', parameters('databricksNatGatewayPublicIpName'))).ipAddress]"
						}
					],
					"virtualNetworkRules": [
						{
							"id": "[concat(variables('databricksVnetId'), '/subnets/', parameters('databricksPublicSubnetName'))]",
							"ignoreMissingVnetServiceEndpoint": false
						}
					]
				},
				"publicNetworkAccess": "Enabled"
			}
		}
	]
}